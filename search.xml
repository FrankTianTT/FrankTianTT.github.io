<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo中marked和mathjax冲突的问题</title>
    <url>/2020/12/10/Hexo%E4%B8%ADmarked%E5%92%8Cmathjax%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>最近打算在博客上整理一些论文笔记，发现hexo默认支持的marked渲染和我附加的mathjax渲染是冲突的，主要有包括两个符号，<code>\</code>和<code>_</code>。</p>
<a id="more"></a>
<p>网上冲浪了一下找到了三种解决方案，分别是</p>
<ul>
<li>手动在<code>\</code>和<code>_</code>前面添加转义符，或者在公式前后用保护块，其实用python正则表达式替换一下也不麻烦，但是我是强迫症，放弃。</li>
<li>更改marked.js的代码，把marked处理<code>\</code>和<code>_</code>的部分去掉，留着这两个符号给mathjax处理，但是我是强迫症，放弃。</li>
<li>使用pandoc，把原来的marked卸载掉。</li>
</ul>
<p>显然最后我选择了第三种方法。</p>
<p>主要就是卸载掉原来的渲染引擎<code>npm uninstall hexo-renderer-marked</code>，并安装pandoc<code>npm install hexo-renderer-pandoc</code>。注意pandoc是需要安装在本地的，在ubuntu下用<code>apt</code>安装就好了。在Mac上还有一个坑，我在下载Anaconda的时候它自带了一个版本很久的pandoc，和Hexo使用的pandoc有冲突，需要卸载掉Anaconda自带的，然后手动去官网上安装。</p>
<p>解决问题后我又找到了NexT官方给出的解决方案<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/MATH.md">数学公式</a>，不过里面有一些东西已经随着NexT本身的更新消失了。</p>
<p>总之就是非常烦😡。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>不做程序员</tag>
        <tag>写个博客怎么这么多坑</tag>
      </tags>
  </entry>
  <entry>
    <title>建站攻略</title>
    <url>/2020/12/08/%E5%BB%BA%E7%AB%99%E6%94%BB%E7%95%A5/</url>
    <content><![CDATA[<p>让我来总结一下这个网站的主要技术。</p>
<p>总的来说，就是用Hexo在阿里云的服务器渲染网站页面，同时又把页面的提交到了github page和gitee page上，让这两个网站也可以同步我的网站。最后实现了自动pull和push的功能，让我可以在我的Mac上专注写文字，然后用一个脚本解决所有问题。</p>
<a id="more"></a>
<p>在这里我们不贴一堆乱七八糟的代码了，把主要流程和借鉴的博客贴上来好了。</p>
<p>首先是在Linux上建立Hexo，要安装nvm和Node.js，以及包管理工具npm。服务器上可能无法访问raw.githubusercontent.com，可以参考GitHub520这个项目。然后就是建立目录，初始化Hexo项目，再把NexT这个主题放到对应的目录下。随便改一改主题，挑一个自己喜欢的。然后可以把github和gitee的master分支加入Hexo的deploy配置中，而整个项目保存在dev分支中。</p>
<p>这部分主要参考<a href="https://blog.csdn.net/u010725842/article/details/80672739">Linux下使用Hexo搭建github博客</a>和<a href="https://blog.csdn.net/weixin_44555878/article/details/106588253">hexo博客部署并同步更新到服务器</a>。Hexo和NexT的用法很容易搜到。</p>
<p>此外，在阿里云中将端口号映射为二级域名可以通过<a href="https://blog.csdn.net/zz_aiytag/article/details/108868654">阿里云二级域名解析到指定端口号的一种方法</a>实现。</p>
<p>接下来在本地clone下来，写个脚本自动登陆到远程的服务器上，从gitee的dev上pull下来，然后push到github上的dev中。最后<code>hexo generate</code>和<code>hexo deploy</code>。</p>
<p>我是用的是<code>expect</code>脚本登陆服务器，<code>git pull</code>要输入密码的话也可以用<code>expect</code>脚本。<code>expect</code>脚本的教程也很好找，一个值得注意的坑是<code>expect</code>的转义字符，例如<code>$</code>是<code>\\\$</code>，详见<a href="https://blog.csdn.net/secondjanuary/article/details/21775953">expect需要转义的符号列表</a>。</p>
<p>在服务器上<code>git pull</code>可能会有冲突，可以先<code>git fetch</code>然后<code>git --hard reset gitee/dev</code>最后再<code>git pull</code>。他们的区别可以看<a href="https://www.cnblogs.com/runnerjack/p/9342362.html">git fetch &amp; pull详解</a>。</p>
<p>此外还有一些坑，例如hexo有一些依赖库要装，百度上都能搜到我就不记录了，毕竟我又不是程序员。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>不做程序员</tag>
      </tags>
  </entry>
  <entry>
    <title>这个网站被开通了</title>
    <url>/2020/12/08/%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E8%A2%AB%E5%BC%80%E9%80%9A%E4%BA%86/</url>
    <content><![CDATA[<p>用了一堆奇奇怪怪的技术让我闲置了小半年的服务器和域名发挥余热。准备这段时间把知乎和其他地方的文章陆陆续续整理过来，算是做个汇总。</p>
<a id="more"></a>
<p>网站现在被托管在阿里云的一个小服务器上，人生第一次见到一核的CPU，还以为htop出bug了。考虑有机会把它搞到自己的机器上，不过要等我分到一个固定ip再说。说起来，最近看到一个想法， 说可以把域名直接映射到ipv6上，然后分配ipv6，这样就省去DNS服务了，amazing。</p>
<p>同时，这个网站还被我同步到了github page和gitee page，具体的教程应该在下一篇文章，两个网站的网址是franktiantt.github.io和franktian424.gitee.io。</p>
<p>就这样吧。</p>
]]></content>
      <categories>
        <category>唠嗑</category>
      </categories>
      <tags>
        <tag>开张撒花</tag>
        <tag>白嫖</tag>
      </tags>
  </entry>
</search>
